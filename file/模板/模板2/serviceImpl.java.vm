package ${package.ServiceImpl};

import java.util.List;
import java.util.Map;
import java.util.HashMap;
import org.springframework.stereotype.Service;
import org.springframework.beans.factory.annotation.Autowired;
import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};

/**
 * ${entity} 业务接口实现类
 * @author ${author}
 * @since ${date}
 */
@Service
public class ${table.serviceImplName} implements ${table.serviceName} {


        @Autowired
        private ${table.mapperName} mapper;

        /**
        * 返回${entity}表所有数据
        * @return
        */
        @Override
        public Map<String,Object> findAll${entity}(Map query) {
            List<Map> dataList = mapper.findAll${entity}(query);
            int totalRow = mapper.getTotalRow(query);
            Map map = new HashMap();
            map.put("dataList",dataList);
            map.put("totalRow",totalRow);
            return map;
        }

        /**
        * 添加${entity}表数据
        */
        @Override
        public Map<String,Object> add${entity}(${entity} ${table.entityPath}) {
            int addResult = mapper.add${entity}(${table.entityPath});
            Map<String,Object> resutlMap = new HashMap<String,Object>();
            if(addResult>0) {
            resutlMap.put("code",true);
            return resutlMap;
            }
            resutlMap.put("code",false);
            return resutlMap;
        }


        /**
         * 删除${entity}表指定的数据
         */
        @Override
        public Map<String,Object>del${entity}ById(Integer primaryKeyId) {
            int addResult = mapper.del${entity}ById(primaryKeyId);
            Map<String,Object> resutlMap = new HashMap<String,Object>();
            if(addResult>0) {
            resutlMap.put("code",true);
            return resutlMap;
            }
            resutlMap.put("code",false);
            return resutlMap;
        }

        /**
         * 根据${entity}表的主键id修改表的信息
         */
        @Override
        public Map<String,Object> update${entity}ById(${entity} ${table.entityPath}) {
            int addResult = mapper.update${entity}ById(${table.entityPath});
            Map<String,Object> resutlMap = new HashMap<String,Object>();
            if(addResult>0) {
            resutlMap.put("code",true);
            return resutlMap;
            }
            resutlMap.put("code",false);
            return resutlMap;
        }
}
