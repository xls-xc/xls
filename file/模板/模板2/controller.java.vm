package ${package.Controller};

import javax.validation.Valid;


import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};

/**
 * ${entity} 前端控制器
 * @author ${author}
 * @since ${date}
 */
@Controller
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/${table.entityPath}")
public class ${table.controllerName} {


    @Autowired
    private ${table.serviceName} service;

    /**
    * 返回展示${entity}表数据的页面
    */
    @RequestMapping("/manager")
    public String ${table.entityPath}List() {
        return "${table.entityPath}List";
    }



    /**
     *  返回${entity}表的所有数据  测试接口
     *  postman测试的时候直接发送参数即可，如果有@RequestBody，则需要发送json的参数不方便测试
     */
    @RequestMapping("/test")
    @ResponseBody
    public Map<String,Object> test(Map query) {
        return service.findAll${entity}(query);
    }

    /**
    *  返回${entity}表的所有数据
    */
    @RequestMapping("/dataGrid")
    @ResponseBody
    public Map<String,Object> dataGrid(@RequestBody Map query) {
        return service.findAll${entity}(query);
    }

    /**
    * 添加${entity}表数据
    */
    @RequestMapping("/add${entity}")
    @ResponseBody
    public Map<String,Object> add${entity}(${entity} ${table.entityPath}) {
        return service.add${entity}(${table.entityPath});
    }


    /**
    * 删除${entity}表指定的数据
    */
    @RequestMapping("/del${entity}")
    @ResponseBody
    public Map<String,Object>del${entity}ById(Integer primaryKeyId) {
            return service.del${entity}ById(primaryKeyId);
    }

    /**
     * 根据${entity}表的主键id修改表的信息
     */
    @RequestMapping("/update${entity}")
    @ResponseBody
    public Map<String,Object> update${entity}ById(@RequestBody ${entity} ${table.entityPath}) {
        return service.update${entity}ById(${table.entityPath});
    }
}
